apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "polygon-monitor-app.fullname" . }} # Adjusted to new chart name if you changed it
  labels:
    {{- include "polygon-monitor-app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "polygon-monitor-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "polygon-monitor-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "polygon-monitor-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PORT # HelloWeb3 app uses PORT env var
              value: {{ .Values.appContainerPort | quote }}
            - name: POLYGONSCAN_API_KEY
              valueFrom:
                secretKeyRef:
                  # This secret will be created by templates/secret.yaml
                  name: {{ include "polygon-monitor-app.fullname" . }}-secret
                  key: POLYGONSCAN_API_KEY
          ports:
            - name: http # This name is referenced by service.targetPort
              containerPort: {{ .Values.appContainerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: / # Assuming your app has a root path that returns 200 OK
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: / # Assuming your app has a root path that returns 200 OK
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
