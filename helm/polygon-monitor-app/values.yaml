# Default values for polygon-monitor-app.
replicaCount: 1

image:
  # repository will be set by CI/CD, e.g., us-central1-docker.pkg.dev/YOUR_PROJECT_ID/YOUR_REPO/hello-web3-app
  repository: "gcr.io/google-samples/hello-app" # Placeholder, MUST be overridden
  pullPolicy: IfNotPresent
  # tag will be set by CI/CD, e.g., the git SHA or 'latest'
  tag: "1.0" # Placeholder, MUST be overridden

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "" # Keep this empty to use default naming convention <releaseName>-<chartName>

# KSA = Kubernetes Service Account
# GSA = Google Service Account (for Workload Identity)
serviceAccount:
  create: true
  name: "polygon-monitor-app-ksa"
  annotations: {} # Populated by CI/CD

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/metrics"

appContainerPort: 8080

secrets:
  polygonscanApiKey: "" # Set by CI/CD

service:
  type: NodePort # Important for Ingress
  port: 80
  targetPort: http

ingress:
  enabled: true # Set to true by CI/CD or when deploying
  enableTls: false

  className: "gce" # Explicitly set for GKE default Ingress
  annotations:
    # cert-manager annotation to use the ClusterIssuer
    # This will be overridden by CI/CD to 'letsencrypt-prod' after testing
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    # Annotation for GKE to use a specific static IP
    kubernetes.io/ingress.global-static-ip-name: "" # Will be set by CI/CD (e.g., "polygon-monitor-cluster-ingress-ip")
    # Optional: Force HTTPS redirect (cert-manager creates the TLS secret)
    # ingress.gcp.kubernetes.io/pre-shared-cert: "will-be-managed-by-cert-manager" # Not needed with cert-manager
    # kubernetes.io/ingress.allow-http: "false" # If you only want HTTPS
    # For HTTP to HTTPS redirect with GCE Ingress (better to use FrontendConfig if needed)
    # networking.gke.io/v1beta1.FrontendConfig: "my-frontend-config"
  hosts:
    - host: app.example.nip.io # Placeholder, will be overridden by CI/CD
      paths:
        - path: /*
          pathType: ImplementationSpecific
  tls:
    # cert-manager will create and manage the secret.
    # The secretName is derived from the host if not specified,
    # or you can specify it.
    - hosts:
        - app.example.nip.io # Placeholder, will be overridden by CI/CD
      secretName:
        polygon-monitor-app-tls # cert-manager will create this secret
        # containing the certificate for the host above.
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 256Mi

autoscaling:
  enabled: false
  # minReplicas: 1
  # maxReplicas: 3
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}
